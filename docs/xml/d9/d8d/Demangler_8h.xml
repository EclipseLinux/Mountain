<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="d9/d8d/Demangler_8h" kind="file" language="C++">
    <compoundname>Demangler.h</compoundname>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>include/utils/Demangler.h</label>
        <link refid="d9/d8d/Demangler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d9/d8d/Demangler_8h_1ab83da1b3fb0e2c79439ba50ab2361154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto demangle</definition>
        <argsstring>(const char *name) -&gt; std::string</argsstring>
        <name>demangle</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tries to demangle a name, used internally. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to demangle, usually by typeid().name() </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string Demangled name, if using GCC, otherwise the mangled one </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/utils/Demangler.h" line="10" column="6" declfile="include/utils/Demangler.h" declline="10" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>demangle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>-&gt;<sp/>std::string;</highlight></codeline>
    </programlisting>
    <location file="include/utils/Demangler.h"/>
  </compounddef>
</doxygen>
